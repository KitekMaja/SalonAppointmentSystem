# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Auto Test Run

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Check out code
        uses: actions/checkout@v3

      # Step 2: Set up Docker to build the image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 3: Build the Docker image
      - name: Build the Docker image
        run: docker build -t booking-microservice:latest -f /SalonAppointmentSystem/Dockerfile .

      # Step 4: Run the Docker container
      - name: Run Docker container
        run: docker run -d -p 8080:8080 --name booking-microservice booking-microservice:latest

      # Step 5: Wait for the service to be up and running
      - name: Wait for service to start
        run: |
          echo "Waiting for service to start..."
          sleep 15  # Wait 15 seconds for the service to start

      # Step 6: Run the tests against the running container
      - name: Run tests
        run: |
          # Assuming you have tests that run with Maven
          mvn test

      # Step 7: Stop and remove the Docker container
      - name: Clean up Docker container
        run: docker stop booking-microservice && docker rm booking-microservice
